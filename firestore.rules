rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // User document rules
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all user data
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Resource document rules
    match /resources/{resourceId} {
      // All authenticated users can read resources
      allow read: if request.auth != null;
      
      // Only admins can create, update, delete resources
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Admin document rules
    match /admins/{adminId} {
      // Only existing admins can read admin list
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      
      // Only super admin can write admin documents
      allow write: if request.auth != null && 
        request.auth.uid == 'your-super-admin-uid';
    }
    
    // Contact form submission rules
    match /contact_submissions/{submissionId} {
      // Authenticated users can create contact form submissions
      allow create: if request.auth != null;
      
      // Only admins can read contact form submissions
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // User rating rules
    match /ratings/{ratingId} {
      // Users can create their own ratings
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Users can update their own ratings
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // All authenticated users can read ratings
      allow read: if request.auth != null;
    }
  }
}

